/*
	https://leetcode.com/problems/find-the-difference/description/

	Given two strings s and t which consist of only lowercase letters.

	String t is generated by random shuffling string s and then add one more letter at a random position.

	Find the letter that was added in t.

	Example:

	Input:
	s = "abcd"
	t = "abcde"

	Output:
	e

	Explanation:
	'e' is the letter that was added.
*/

package main
import (
	"fmt"
)

func main() {
	testcases := [][]string{{"abcd", "abcde"}, {"dba", "abcd"}, {"a", "aa"}}

	for i, test := range testcases {
		// fmt.Println(i, ". ", test, " : ", findTheDifference(test[0], test[1]))
		fmt.Printf("%d. {%s, %s} : %c\n", i, test[0], test[1], findTheDifference(test[0], test[1]))
	}
}

func findTheDifference2(s string, t string) byte {
	
}

func findTheDifference(s string, t string) byte {
	// transform strngs into byte slices (this also assumes that strings consist of ASCII characters)
	s_bytes := []byte(s)
	t_bytes := []byte(t)

	// for every byte in s_bytes, set that valued byte in t_bytes to nil
	for _, letter := range s_bytes {
		for i := 0; i < len(t_bytes); i++ {
			if t_bytes[i] == letter {
				t_bytes[i] = 0
			}
		}
	}

	// finally, find and return the non-nil byte in t_byte (which has to be the extra-added letter)
	var letter byte
	for _, letter = range t_bytes {
		if letter != 0 {
			return letter
		}
	}

	return letter
}
